---
title: Environment Variables
description: Comprehensive guide for configuring your application's environment with the `.env` file. This document is your one-stop resource for understanding and customizing the environment variables that will shape your application's behavior in different contexts.
---

# .env File Configuration
Welcome to the comprehensive guide for configuring your application's environment with the `.env` file. This document is your one-stop resource for understanding and customizing the environment variables that will shape your application's behavior in different contexts.

While the default settings provide a solid foundation for a standard `docker` installation, delving into this guide will unveil the full potential of LibreChat. This guide empowers you to tailor LibreChat to your precise needs. Discover how to adjust language model availability, integrate social logins, manage the automatic moderation system, and much more. It's all about giving you the control to fine-tune LibreChat for an optimal user experience.

> **Reminder: Please restart LibreChat for the configuration changes to take effect**

Alternatively, you can create a new file named `docker-compose.override.yml` in the same directory as your main `docker-compose.yml` file for LibreChat, where you can set your .env variables as needed under `environment`, or modify the default configuration provided by the main `docker-compose.yml`, without the need to directly edit or duplicate the whole file.

For more info see: 

- Our quick guide: 
    - **[Docker Override](/docs/configuration/docker/docker_override)**

- The official docker documentation: 
    - **[docker docs - understanding-multiple-compose-files](https://docs.docker.com/compose/multiple-compose-files/extends/#understanding-multiple-compose-files)**
    - **[docker docs - merge-compose-files](https://docs.docker.com/compose/multiple-compose-files/merge/#merge-compose-files)**
    - **[docker docs - specifying-multiple-compose-files](https://docs.docker.com/compose/reference/#specifying-multiple-compose-files)**

- You can also view an example of an override file for LibreChat in your LibreChat folder and on GitHub: 
    - **[docker-compose.override.example](https://github.com/danny-avila/LibreChat/blob/main/docker-compose.override.yml.example)**

---

## Server Configuration

### Port

- The server listens on a specific port.
- The `PORT` environment variable sets the port where the server listens. By default, it is set to `3080`.


<OptionTable
  options={[
    ['HOST', 'string', 'Specifies the host.', 'HOST=localhost'],
    ['PORT', 'number', 'Specifies the port.', 'PORT=3080'],
  ]}
/>


### MongoDB Database

- Change this to your MongoDB URI if different. You should also add `LibreChat` or your own `APP_TITLE` as the database name in the URI.

<OptionTable
  options={[
    ['MONGO_URI', 'string', 'Specifies the MongoDB URI.','MONGO_URI=mongodb://127.0.0.1:27017/LibreChat'],
  ]}
/>

For example:

* If you are using an online database, the URI format is `mongodb+srv://<username>:<password>@<host>/<database>?<options>`. Your `MONGO_URI` should look like this: `mongodb+srv://username:password@host.mongodb.net/LibreChat?retryWrites=true` (`retryWrites=true` is the only option you need when using the online database)

See also:

* [MongoDB Atlas](/docs/configuration/mongodb/mongodb_atlas) for instructions on how to create an online MongoDB Atlas database (useful for use without Docker)
* [MongoDB Community Server](/docs/configuration/mongodb/mongodb_community) for instructions on how to create a local MongoDB database (without Docker)
* [MongoDB Authentication](/docs/configuration/mongodb/mongodb_auth) To enable explicit authentication for MongoDB in Docker.
* [Manage your database](../../features/manage_your_database.md) for securely accessing your Docker MongoDB database //TODO

### Application Domains

To configure LibreChat for local use or custom domain deployment, set the following environment variables:

<OptionTable
  options={[
    ['DOMAIN_CLIENT', 'string', 'Specifies the client-side domain.', 'DOMAIN_CLIENT=http://localhost:3080'],
    ['DOMAIN_SERVER', 'string', 'Specifies the server-side domain.', 'DOMAIN_SERVER=http://localhost:3080'],
  ]}
/>

When deploying LibreChat to a custom domain, replace `http://localhost:3080` with your deployed URL 
- e.g. `https://librechat.example.com`.

### Prevent Public Search Engines Indexing

By default, your website will not be indexed by public search engines (e.g. Google, Bing, …). This means that people will not be able to find your website through these search engines. If you want to make your website more visible and searchable, you can change the following setting to `false`

<OptionTable
  options={[
    ['NO_INDEX', 'boolean', 'Prevents public search engines from indexing your website.', 'NO_INDEX=true'],
  ]}
/>

❗**Note:** This method is not guaranteed to work for all search engines, and some search engines may still index your website or web page for other purposes, such as caching or archiving. Therefore, you should not rely solely on this method to protect sensitive or confidential information on your website or web page.

### Logging

LibreChat has built-in central logging, see [Logging System](/docs/configuration/logging) for more info.

#### Log Files

* Debug logging is enabled by default and crucial for development.
* To report issues, reproduce the error and submit logs from `./api/logs/debug-%DATE%.log` at: **[LibreChat GitHub Issues](https://github.com/danny-avila/LibreChat/issues)**
* Error logs are stored in the same location.

#### Environment Variables

<OptionTable
  options={[
    ['DEBUG_LOGGING', 'boolean', 'Keep debug logs active.','DEBUG_LOGGING=true'],
    ['DEBUG_CONSOLE', 'boolean', 'Enable verbose console/stdout logs in the same format as file debug logs.', 'DEBUG_CONSOLE=false'],
    ['CONSOLE_JSON', 'boolean', 'Enable verbose JSON console/stdout logs suitable for cloud deployments like GCP/AWS.', 'CONSOLE_JSON=false'],
  ]}
/>

Note: 
* `DEBUG_LOGGING` can be used with either `DEBUG_CONSOLE` or `CONSOLE_JSON` but not both.
* `DEBUG_CONSOLE` and `CONSOLE_JSON` are mutually exclusive.
* `CONSOLE_JSON`: When handling console logs in cloud deployments (such as GCP or AWS), enabling this will dump the logs with a UTC timestamp and format them as JSON. 
  * See: [feat: Add CONSOLE_JSON](https://github.com/danny-avila/LibreChat/pull/2146)

Note: `DEBUG_CONSOLE` is not recommended, as the outputs can be quite verbose, and so it's disabled by default.

### Permission
> UID and GID are numbers assigned by Linux to each user and group on the system. If you have permission problems, set here the UID and GID of the user running the Docker Compose command. The applications in the container will run with these UID/GID.

<OptionTable
  options={[
    ['UID', 'number', 'The user ID.', 'UID=1000'],
    ['GID', 'number', 'The group ID.', 'GID=1000'],
  ]}
/>

### Configuration Path - `librechat.yaml`
Specify an alternative location for the LibreChat configuration file. 
You may specify an **absolute path**, a **relative path**, or a **URL**. The filename in the path is flexible and does not have to be `librechat.yaml`; any valid configuration file will work.

> **Note**: If you prefer LibreChat to search for the configuration file in the root directory (which is the default behavior), simply leave this option commented out.

<OptionTable
  options={[
    ['CONFIG_PATH', 'string', 'An alternative location for the LibreChat configuration file.', 'CONFIG_PATH=https://raw.githubusercontent.com/danny-avila/LibreChat/main/librechat.example.yaml'],
  ]}
/>

## Endpoints
In this section, you can configure the endpoints and models selection, their API keys, and the proxy and reverse proxy settings for the endpoints that support it.

### General Config
Uncomment `ENDPOINTS` to customize the available endpoints in LibreChat.

<OptionTable
  options={[
    ['ENDPOINTS', 'string', 'Comma-separated list of available endpoints.', 'ENDPOINTS=openAI,assistants,gptPlugins,azureOpenAI,google,anthropic,bingAI,custom'],
    ['PROXY', 'string', 'Proxy setting for all endpoints.', 'PROXY='],
    ['TITLE_CONVO', 'boolean', 'Enable titling for all endpoints.', 'TITLE_CONVO=true'],
  ]}
/>

### Known Endpoints - `librechat.yaml`
- see: [AI Endpoints](./ai_endpoints.md) //TODO
- see also: [Custom Configuration](./custom_config.md) //TODO

<OptionTable
  options={[
    ['ANYSCALE_API_KEY', 'string', 'API key for Anyscale.', 'ANYSCALE_API_KEY='],
    ['APIPIE_API_KEY', 'string', 'API key for Apipie.', 'APIPIE_API_KEY='],
    ['COHERE_API_KEY', 'string', 'API key for Cohere.', 'COHERE_API_KEY='],
    ['FIREWORKS_API_KEY', 'string', 'API key for Fireworks.', 'FIREWORKS_API_KEY='],
    ['GROQ_API_KEY', 'string', 'API key for Groq.', 'GROQ_API_KEY='],
    ['MISTRAL_API_KEY', 'string', 'API key for Mistral.', 'MISTRAL_API_KEY='],
    ['OPENROUTER_KEY', 'string', 'API key for OpenRouter.', 'OPENROUTER_KEY='],
    ['PERPLEXITY_API_KEY', 'string', 'API key for Perplexity.', 'PERPLEXITY_API_KEY='],
    ['SHUTTLEAI_API_KEY', 'string', 'API key for ShuttleAI.', 'SHUTTLEAI_API_KEY='],
    ['TOGETHERAI_API_KEY', 'string', 'API key for TogetherAI.', 'TOGETHERAI_API_KEY='],
  ]}
/>

### Anthropic
see: [Anthropic Endpoint](./ai_setup.md#anthropic)
- You can request an access key from https://console.anthropic.com/
- Leave `ANTHROPIC_API_KEY=` blank to disable this endpoint
- Set `ANTHROPIC_API_KEY=` to "user_provided" to allow users to provide their own API key from the WebUI
- If you have access to a reverse proxy for `Anthropic`, you can set it with `ANTHROPIC_REVERSE_PROXY=`
    - leave blank or comment it out to use default base url

<OptionTable
  options={[
    ['ANTHROPIC_API_KEY', 'string', 'Anthropic API key or "user_provided" to allow users to provide their own API key.', 'Defaults to an empty string.'],
    ['ANTHROPIC_MODELS', 'string', 'Comma-separated list of Anthropic models to use.', 'ANTHROPIC_MODELS=claude-3-opus-20240229,claude-3-sonnet-20240229,claude-3-haiku-20240307,claude-2.1,claude-2,claude-1.2,claude-1,claude-1-100k,claude-instant-1,claude-instant-1-100k'],
    ['ANTHROPIC_REVERSE_PROXY', 'string', 'Reverse proxy for Anthropic.', 'ANTHROPIC_REVERSE_PROXY='],
    ['ANTHROPIC_TITLE_MODEL', 'string', 'Model to use for titling with Anthropic.', 'ANTHROPIC_TITLE_MODEL=claude-3-haiku-20240307'],
  ]}
/>

> **Note:** Must be compatible with the Anthropic Endpoint. Also, Claude 2 and Claude 3 models perform best at this task, with `claude-3-haiku` models being the cheapest.

### BingAI
Bing, also used for Sydney, jailbreak, and Bing Image Creator, see: [Bing Access token](./ai_setup.md#bingai) and [Bing Jailbreak](../../features/bing_jailbreak.md)

Follow these instructions to get your Bing access token (it's best to use the full cookie string for that purpose): **[Bing Access Token](./ai_setup.md#bingai)**

<OptionTable
  options={[
    ['BINGAI_TOKEN', 'string', 'Bing access token. Leave blank to disable. Can be set to "user_provided" to allow users to provide their own API key from the WebUI.', 'BINGAI_TOKEN=user_provided'],
    ['BINGAI_HOST', 'string', 'Bing host URL. Leave commented out to use default server.', 'BINGAI_HOST=https://cn.bing.com'],
  ]}
/>

Note: It is recommended to leave it as "user_provided" and provide the token from the WebUI.

### Google
Follow these instructions to setup the [Google Endpoint](/docs/configuration/pre_configured_ai/google)

<OptionTable
  options={[
    ['GOOGLE_KEY', 'string', 'Google API key. Set to "user_provided" to allow users to provide their own API key from the WebUI.', 'GOOGLE_KEY=user_provided'],
    ['GOOGLE_REVERSE_PROXY', 'string', 'Google reverse proxy URL. Defaults to empty string.'],
  ]}
/>

Customize the available models, separated by commas, **without spaces**. The first will be default. Leave it blank or commented out to use internal settings.

<OptionTable
  options={[
    ['GOOGLE_MODELS', 'string', 'Available Gemini API Google models, separated by commas.', 'GOOGLE_MODELS=gemini-1.0-pro,gemini-1.0-pro-001,gemini-1.0-pro-latest,gemini-1.0-pro-vision-latest,gemini-1.5-pro-latest,gemini-pro,gemini-pro-vision'],
    ['GOOGLE_MODELS', 'string', 'Available Vertex AI Google models, separated by commas.', 'GOOGLE_MODELS=gemini-1.5-pro-preview-0409,gemini-1.0-pro-vision-001,gemini-pro,gemini-pro-vision,chat-bison,chat-bison-32k,codechat-bison,codechat-bison-32k,text-bison,text-bison-32k,text-unicorn,code-gecko,code-bison,code-bison-32k'],
  ]}
/>

### OpenAI

See: [OpenAI Setup](/docs/configuration/pre_configured_ai/openai)

<OptionTable
  options={[
    ['OPENAI_API_KEY', 'string', 'Your OpenAI API key. Leave blank to disable this endpoint or set to "user_provided" to allow users to provide their own API key from the WebUI.', 'OPENAI_API_KEY=user_provided'],
    ['OPENAI_MODELS', 'string', 'Customize the available models, separated by commas, without spaces. The first will be default. Leave commented out to use internal settings.', 'OPENAI_MODELS=gpt-3.5-turbo-0125,gpt-3.5-turbo-0301,gpt-3.5-turbo,gpt-4,gpt-4-0613,gpt-4-vision-preview,gpt-3.5-turbo-0613,gpt-3.5-turbo-16k-0613,gpt-4-0125-preview,gpt-4-turbo-preview,gpt-4-1106-preview,gpt-3.5-turbo-1106,gpt-3.5-turbo-instruct,gpt-3.5-turbo-instruct-0914,gpt-3.5-turbo-16k'],
    ['DEBUG_OPENAI', 'boolean', 'Enable debug mode for the OpenAI endpoint.', 'DEBUG_OPENAI=false'],
    ['OPENAI_TITLE_MODEL', 'string', 'The model used for OpenAI titling.', 'OPENAI_TITLE_MODEL=gpt-3.5-turbo'],
    ['OPENAI_SUMMARIZE', 'boolean', 'Enable message summarization. Fasle by default', 'OPENAI_SUMMARIZE=true'],
    ['OPENAI_SUMMARY_MODEL', 'string', 'The model used for OpenAI summarization.', 'OPENAI_SUMMARY_MODEL=gpt-3.5-turbo'],
    ['OPENAI_FORCE_PROMPT', 'boolean', 'Force the API to be called with a prompt payload instead of a messages payload.', 'OPENAI_FORCE_PROMPT=false'],
    ['OPENAI_REVERSE_PROXY', 'string', 'Reverse proxy settings for OpenAI.', 'OPENAI_REVERSE_PROXY='],
    ['OPENAI_ORGANIZATION', 'string', 'Specify which organization to use for each API request to OpenAI. Optional', 'OPENAI_ORGANIZATION='],
  ]}
/>

### Assistants

See: [Assistants Setup](/docs/configuration/pre_configured_ai/assistants)

<OptionTable
  options={[
    ['ASSISTANTS_API_KEY', 'string', 'Your OpenAI API key for Assistants API. Leave blank to disable this endpoint or set to "user_provided" to allow users to provide their own API key from the WebUI.', 'ASSISTANTS_API_KEY=user_provided'],
    ['ASSISTANTS_MODELS', 'string', 'Customize the available models, separated by commas, without spaces. The first will be default. Leave blank to use internal settings.', 'ASSISTANTS_MODELS=gpt-3.5-turbo-0125,gpt-3.5-turbo-16k-0613,gpt-3.5-turbo-16k,gpt-3.5-turbo,gpt-4,gpt-4-0314,gpt-4-32k-0314,gpt-4-0613,gpt-3.5-turbo-0613,gpt-3.5-turbo-1106,gpt-4-0125-preview,gpt-4-turbo-preview,gpt-4-1106-preview'],
    ['ASSISTANTS_BASE_URL', 'string', 'Alternate base URL for Assistants API.', 'ASSISTANTS_BASE_URL='],
  ]}
/>

Note: You can customize the available models, separated by commas, without spaces. The first will be default. Leave it blank or commented out to use internal settings.

### Plugins
Here are some useful resources about plugins:

* [Introduction](/docs/user_guides/plugins)
* [Make Your Own](/docs/development/tools_and_plugins)

#### General Configuration

### Environment Variables

<OptionTable
  options={[
    ['PLUGIN_MODELS', 'string', 'Identify available models, separated by commas without spaces. The first model in the list will be set as default. Defaults to internal settings.', 'PLUGIN_MODELS=gpt-4,gpt-4-turbo,gpt-4-turbo-preview,gpt-4-0125-preview,gpt-4-1106-preview,gpt-4-0613,gpt-3.5-turbo,gpt-3.5-turbo-0125,gpt-3.5-turbo-1106,gpt-3.5-turbo-0613'],
  ]}
/>

<OptionTable
  options={[
    ['DEBUG_PLUGINS', 'boolean', 'Set to false to disable debug mode for plugins.', 'DEBUG_PLUGINS=true'],
  ]}
/>

### Credentials Configuration

To securely store credentials, you need a fixed key and IV. You can set them here for prod and dev environments.

<OptionTable
  options={[
    ['CREDS_KEY', 'string', '32-byte key (64 characters in hex) for securely storing credentials. Required for app startup.', 'CREDS_KEY=f34be427ebb29de8d88c107a71546019685ed8b241d8f2ed00c3df97ad2566f0'],
    ['CREDS_IV', 'string', '16-byte IV (32 characters in hex) for securely storing credentials. Required for app startup.', 'CREDS_IV=e2341419ec3dd3d19b13a1a87fafcbfb'],
  ]}
/>

<Callout type="warning" title="Warning">
**Warning:** If you don't set `CREDS_KEY` and `CREDS_IV`, the app will crash on startup. 
- You can use this [Key Generator](/toolkit/creds_generator) to generate them quickly.
</Callout>

#### Azure AI Search
This plugin supports searching Azure AI Search for answers to your questions. See: [Azure AI Search](/docs/configuration/tools/azure_ai_search)

<OptionTable
  options={[    
    ['AZURE_AI_SEARCH_SERVICE_ENDPOINT', 'string', 'The service endpoint for Azure AI Search.','AZURE_AI_SEARCH_SERVICE_ENDPOINT='],
    ['AZURE_AI_SEARCH_INDEX_NAME', 'string', 'The index name for Azure AI Search.','AZURE_AI_SEARCH_INDEX_NAME='],
    ['AZURE_AI_SEARCH_API_KEY', 'string', 'The API key for Azure AI Search.','AZURE_AI_SEARCH_API_KEY='],
    ['AZURE_AI_SEARCH_API_VERSION', 'string', 'The API version for Azure AI Search.','AZURE_AI_SEARCH_API_VERSION='],
    ['AZURE_AI_SEARCH_SEARCH_OPTION_QUERY_TYPE', 'string', 'The query type for Azure AI Search.','AZURE_AI_SEARCH_SEARCH_OPTION_QUERY_TYPE='],
    ['AZURE_AI_SEARCH_SEARCH_OPTION_TOP', 'number', 'The top count for Azure AI Search.','AZURE_AI_SEARCH_SEARCH_OPTION_TOP='],
    ['AZURE_AI_SEARCH_SEARCH_OPTION_SELECT', 'string', 'The select fields for Azure AI Search.','AZURE_AI_SEARCH_SEARCH_OPTION_SELECT='],
  ]}
/>

#### DALL-E:
**Note:** Make sure the `gptPlugins` endpoint is set in the [`ENDPOINTS`](#endpoints) environment variable if it was configured before.

**API Keys:**
<OptionTable
  options={[
    ['DALLE_API_KEY', 'string', 'The OpenAI API key for DALL-E 2 and DALL-E 3 services. Defaults to an empty string.'],
  ]}
/>

**API Keys (Version Specific):**
<OptionTable
  options={[
    ['DALLE3_API_KEY', 'string', 'The OpenAI API key for DALL-E 3. Defaults to an empty string.'],
    ['DALLE2_API_KEY', 'string', 'The OpenAI API key for DALL-E 2. Defaults to an empty string.'],
  ]}
/>

**System Prompts:**
<OptionTable
  options={[
    ['DALLE3_SYSTEM_PROMPT', 'string', 'The system prompt for DALL-E 3. Defaults to an empty string.'],
    ['DALLE2_SYSTEM_PROMPT', 'string', 'The system prompt for DALL-E 2. Defaults to an empty string.'],
  ]}
/>

**Reverse Proxy Settings:**
<OptionTable
  options={[
    ['DALLE_REVERSE_PROXY', 'string', 'The reverse proxy URL for DALL-E API requests. Defaults to an empty string.'],
  ]}
/>

**Base URLs:**
<OptionTable
  options={[
    ['DALLE3_BASEURL', 'string', 'The base URL for DALL-E 3 API endpoints. Defaults to an empty string.'],
    ['DALLE2_BASEURL', 'string', 'The base URL for DALL-E 2 API endpoints. Defaults to an empty string.'],
  ]}
/>

**Azure OpenAI Integration (Optional):**
<OptionTable
  options={[
    ['DALLE3_AZURE_API_VERSION', 'string', 'The API version for DALL-E 3 with Azure OpenAI service. Defaults to an empty string.'],
    ['DALLE2_AZURE_API_VERSION', 'string', 'The API version for DALL-E 2 with Azure OpenAI service. Defaults to an empty string.'],
  ]}
/>

Remember to replace placeholder text with actual prompts or instructions and provide your actual API keys if you choose to include them directly in the file (though managing sensitive keys outside of the codebase is a best practice). Always review and respect OpenAI's usage policies when embedding API keys in software.

> Note: if you have PROXY set, it will be used for DALL-E calls also, which is universal for the app.


#### Google Search

See detailed instructions here: **[Google Search](/docs/configuration/tools/google_search)**

**Environment Variables:**

<OptionTable
  options={[
    ['GOOGLE_SEARCH_API_KEY', 'string', 'Google Search API key. Defaults to `""`.'],
    ['GOOGLE_CSE_ID', 'string', 'Google Custom Search Engine ID. Defaults to `""`.'],
  ]}
/>


#### SerpAPI

**Description:** SerpApi is a real-time API to access Google search results (not as performant)

**Environment Variables:**

<OptionTable
  options={[
    ['SERPAPI_API_KEY', 'string', 'Your SerpAPI API key. **Required**. Defaults to `""`.'],
  ]}
/>

#### Stable Diffusion (Automatic1111)

See detailed instructions here: **[Stable Diffusion](/docs/configuration/tools/stable_diffusion)**

**Description:** Use `http://127.0.0.1:7860` with local install and `http://host.docker.internal:7860` for docker

**Environment Variables:**

<OptionTable
  options={[
    ['SD_WEBUI_URL', 'string', 'Stable Diffusion web UI URL. Defaults to `http://host.docker.internal:7860`.'],
  ]}
/>

### Tavily

Get your API key here: **[https://tavily.com/#api](https://tavily.com/#api)**

**Environment Variables:**

<OptionTable
  options={[    ['TAVILY_API_KEY', 'string', 'Tavily API key. Defaults to `""`.'],
  ]}
/>

### Traversaal

**Description:** LLM-enhanced search tool.

Get API key here: **https://api.traversaal.ai/dashboard**

**Environment Variables:**

<OptionTable
  options={[
    ['TRAVERSAAL_API_KEY', 'string', 'Traversaal API key. Defaults to `""`.'],
  ]}
/>

#### WolframAlpha

See detailed instructions here: **[Wolfram Alpha](/docs/configuration/tools/wolfram)**

**Environment Variables:**

<OptionTable
  options={[
    ['WOLFRAM_APP_ID', 'string', 'Wolfram Alpha App ID. Defaults to `""`.'],
  ]}
/>

#### Zapier

**Description:** - You need a Zapier account. Get your API key from here: **[Zapier](https://nla.zapier.com/credentials/)**
- Create allowed actions - Follow step 3 in this getting start guide from Zapier

**Note:** Zapier is known to be finicky with certain actions. Writing email drafts is probably the best use of it.

**Environment Variables:**

<OptionTable
  options={[
    ['ZAPIER_NLA_API_KEY', 'string', 'Zapier NLA API key. Defaults to `""`.'],
  ]}
/>

## Search (Meilisearch)

Enables search in messages and conversations:

<OptionTable
  options={[
    ['SEARCH', 'boolean', 'Enables search in messages and conversations. Defaults to `false`.'],
  ]}
/>

> Note: If you're not using docker, it requires the installation of the free self-hosted Meilisearch or a paid remote plan

To disable anonymized telemetry analytics for MeiliSearch for absolute privacy, set to true:

<OptionTable
  options={[
    ['MEILI_NO_ANALYTICS', 'boolean', 'Disables anonymized telemetry analytics for MeiliSearch. Defaults to `false`.'],
  ]}
/>

For the API server to connect to the search server. Replace '0.0.0.0' with 'meilisearch' if serving MeiliSearch with docker-compose.

<OptionTable
  options={[
    ['MEILI_HOST', 'string', 'The API server connection to the search server. Defaults to `http://0.0.0.0:7700`.'],
  ]}
/>

This master key must be at least 16 bytes, composed of valid UTF-8 characters. MeiliSearch will throw an error and refuse to launch if no master key is provided or if it is under 16 bytes. MeiliSearch will suggest a secure autogenerated master key. This is a ready-made secure key for docker-compose, you can replace it with your own.

<OptionTable
  options={[
    ['MEILI_MASTER_KEY', 'string', 'The master key for MeiliSearch. No default value, must be at least 16 bytes.'],
  ]}
/>

## User System
This section contains the configuration for:

  - [Automated Moderation](#moderation)
  - [Balance/Token Usage](#balance)
  - [Registration and Social Logins](#registration-and-login)
  - [Email Password Reset](#email-password-reset)
     
Here is the rewritten content in MDX format with improvements:

### Moderation
The Automated Moderation System uses a scoring mechanism to track user violations. As users commit actions like excessive logins, registrations, or messaging, they accumulate violation scores. Upon reaching a set threshold, the user and their IP are temporarily banned. This system ensures platform security by monitoring and penalizing rapid or suspicious activities.

see: **[Automated Moderation](/docs/configuration/mod_system)**

#### Basic Moderation Settings
<OptionTable
  options={[
    ['OPENAI_MODERATION', 'boolean', 'Whether or not to enable OpenAI moderation on the **OpenAI** and **Plugins** endpoints. Defaults to `false`.'],
    ['OPENAI_MODERATION_API_KEY', 'string', 'Your OpenAI API key.'],
    ['OPENAI_MODERATION_REVERSE_PROXY', 'string', 'Note: Commented out by default, this is not working with all reverse proxys.'],
  ]}
/>

#### Banning Settings
<OptionTable
  options={[
    ['BAN_VIOLATIONS', 'boolean', 'Whether or not to enable banning users for violations (they will still be logged). Defaults to `true`.'],
    ['BAN_DURATION', 'integer', 'How long the user and associated IP are banned for (in milliseconds). Defaults to `1000 * 60 * 60 * 2`'],
    ['BAN_INTERVAL', 'integer', 'The user will be banned every time their score reaches/crosses over the interval threshold. Defaults to `20`.'],
  ]}
/>

#### Score for each violation
<OptionTable
  options={[
    ['LOGIN_VIOLATION_SCORE', 'integer', 'Score for login violations. Defaults to `1`.'],
    ['REGISTRATION_VIOLATION_SCORE', 'integer', 'Score for registration violations. Defaults to `1`.'],
    ['CONCURRENT_VIOLATION_SCORE', 'integer', 'Score for concurrent violations. Defaults to `1`.'],
    ['MESSAGE_VIOLATION_SCORE', 'integer', 'Score for message violations. Defaults to `1`.'],
    ['NON_BROWSER_VIOLATION_SCORE', 'integer', 'Score for non-browser violations. Defaults to `20`.'],
    ['ILLEGAL_MODEL_REQ_SCORE', 'integer', 'Score for illegal model requests. Defaults to `5`.'],
  ]}
/>

> Note: Non-browser access and Illegal model requests are almost always nefarious as it means a 3rd party is attempting to access the server through an automated script.

Here is the rewritten content in MDX format with improvements:

### Moderation
The Automated Moderation System uses a scoring mechanism to track user violations. As users commit actions like excessive logins, registrations, or messaging, they accumulate violation scores. Upon reaching a set threshold, the user and their IP are temporarily banned. This system ensures platform security by monitoring and penalizing rapid or suspicious activities.

see: **[Automated Moderation](/docs/configuration/mod_system)**

#### Basic Moderation Settings
<OptionTable
  options={[
    ['OPENAI_MODERATION', 'boolean', 'Whether or not to enable OpenAI moderation on the **OpenAI** and **Plugins** endpoints. Defaults to `false`.'],
    ['OPENAI_MODERATION_API_KEY', 'string', 'Your OpenAI API key.'],
    ['OPENAI_MODERATION_REVERSE_PROXY', 'string', 'Note: Commented out by default, this is not working with all reverse proxys.'],
  ]}
/>

#### Banning Settings
<OptionTable
  options={[
    ['BAN_VIOLATIONS', 'boolean', 'Whether or not to enable banning users for violations (they will still be logged). Defaults to `true`.'],
    ['BAN_DURATION', 'integer', 'How long the user and associated IP are banned for (in milliseconds). Defaults to `1000 * 60 * 60 * 2`'],
    ['BAN_INTERVAL', 'integer', 'The user will be banned every time their score reaches/crosses over the interval threshold. Defaults to `20`.'],
  ]}
/>

#### Score for each violation
<OptionTable
  options={[
    ['LOGIN_VIOLATION_SCORE', 'integer', 'Score for login violations. Defaults to `1`.'],
    ['REGISTRATION_VIOLATION_SCORE', 'integer', 'Score for registration violations. Defaults to `1`.'],
    ['CONCURRENT_VIOLATION_SCORE', 'integer', 'Score for concurrent violations. Defaults to `1`.'],
    ['MESSAGE_VIOLATION_SCORE', 'integer', 'Score for message violations. Defaults to `1`.'],
    ['NON_BROWSER_VIOLATION_SCORE', 'integer', 'Score for non-browser violations. Defaults to `20`.'],
    ['ILLEGAL_MODEL_REQ_SCORE', 'integer', 'Score for illegal model requests. Defaults to `5`.'],
  ]}
/>

> Note: Non-browser access and Illegal model requests are almost always nefarious as it means a 3rd party is attempting to access the server through an automated script.

#### Message rate limiting (per user & IP)

<OptionTable
  options={[    ['LIMIT_CONCURRENT_MESSAGES', 'boolean', 'Whether to limit the amount of messages a user can send per request. Defaults to `true`.'],
    ['CONCURRENT_MESSAGE_MAX', 'integer', 'The max amount of messages a user can send per request. Defaults to `2`.'],
  ]}
/>

#### Limiters

> Note: You can utilize both limiters, but default is to limit by IP only.

##### IP Limiter:

<OptionTable
  options={[    ['LIMIT_MESSAGE_IP', 'boolean', 'Whether to limit the amount of messages an IP can send per `MESSAGE_IP_WINDOW`. Defaults to `true`.'],
    ['MESSAGE_IP_MAX', 'integer', 'The max amount of messages an IP can send per `MESSAGE_IP_WINDOW`. Defaults to `40`.'],
    ['MESSAGE_IP_WINDOW', 'integer', 'In minutes, determines the window of time for `MESSAGE_IP_MAX` messages. Defaults to `1`.'],
  ]}
/>

##### User Limiter:

<OptionTable
  options={[    ['LIMIT_MESSAGE_USER', 'boolean', 'Whether to limit the amount of messages an user can send per `MESSAGE_USER_WINDOW`. Defaults to `false`.'],
    ['MESSAGE_USER_MAX', 'integer', 'The max amount of messages an user can send per `MESSAGE_USER_WINDOW`. Defaults to `40`.'],
    ['MESSAGE_USER_WINDOW', 'integer', 'In minutes, determines the window of time for `MESSAGE_USER_MAX` messages. Defaults to `1`.'],
  ]}
/>

### Balance

The following enables user balances for the OpenAI/Plugins endpoints, which you can add manually or you will need to build out a balance accruing system for users.

see: **[Token Usage](/docs/configuration/token_usage)**

<OptionTable
  options={[
    ['CHECK_BALANCE', 'boolean', 'Enable token credit balances for the OpenAI/Plugins endpoints. Defaults to `false`.'],
  ]}
/>

#### Managing Balances

- Run `npm run add-balance` to manually add balances.
- You can also specify the email and token credit amount to add, e.g.: `npm run add-balance example@example.com 1000`
- Run `npm run list-balances` to list the balance of every user.

> **Note:** 1000 credits = $0.001 (1 mill USD)

Here is the improved document:

### Registration and Login
see: **[Authentication System](/docs/configuration/authentication)**

<div style={{display: "flex", justifyContent: "center", alignItems: "center", flexDirection: "column"}}>
  <div className="image-light-theme">
    <img src="https://github.com/danny-avila/LibreChat/assets/32828263/4c51dc25-31d3-4c51-8c2a-0cdfb5a25033" style={{ width: "75%", height: "75%" }} alt="Image for Light Theme" />
  </div>

  <div className="image-dark-theme">
    <img src="https://github.com/danny-avila/LibreChat/assets/32828263/3bc5371d-e51d-4e91-ac68-56db6e85bb2c" style={{ width: "75%", height: "75%" }} alt="Image for Dark Theme" />
  </div>
</div>

- General Settings: 

<OptionTable
  options={[
    ['ALLOW_EMAIL_LOGIN', 'boolean', 'Enable or disable ONLY email login. Defaults to `false`.'],
    ['ALLOW_REGISTRATION', 'boolean', 'Enable or disable Email registration of new users. Defaults to `false`.'],
    ['ALLOW_SOCIAL_LOGIN', 'boolean', 'Allow users to connect to LibreChat with various social networks. Defaults to `false`.'],
    ['ALLOW_SOCIAL_REGISTRATION', 'boolean', 'Enable or disable registration of new users using various social networks. Defaults to `false`.'],
  ]}
/>

> **Quick Tip:** Even with registration disabled, add users directly to the database using `npm run create-user`.
> **Quick Tip:** With registration disabled, you can delete a user with `npm run delete-user email@domain.com`.

- Session and Refresh Token Settings: 

<OptionTable
  options={[
    ['SESSION_EXPIRY', 'integer (milliseconds)', 'Session expiry time. Defaults to `15 minutes` (900000 ms)'],
    ['REFRESH_TOKEN_EXPIRY', 'integer (milliseconds)', 'Refresh token expiry time. Defaults to `7 days` (604800000 ms)'],
  ]}
/>

- For more information: **[Refresh Token](https://github.com/danny-avila/LibreChat/pull/927)**

- JWT Settings: 

You should use new secure values. The examples given are 32-byte keys (64 characters in hex). 
Use this replit to generate some quickly: **[JWT Keys](https://replit.com/@daavila/crypto#index.js)**

<OptionTable
  options={[
    ['JWT_SECRET', 'string (hex)', 'JWT secret key. Defaults to a random 32-byte key.'],
    ['JWT_REFRESH_SECRET', 'string (hex)', 'JWT refresh secret key. Defaults to a random 32-byte key.'],
  ]}
/>

### Social Logins
For more details: [OAuth2-OIDC](/docs/configuration/authentication/OAuth2-OIDC)

#### [Discord Authentication](/docs/configuration/authentication/OAuth2-OIDC/discord)

For more information: **[Discord](/docs/configuration/authentication/OAuth2-OIDC/discord)**

<OptionTable
  options={[
    ['DISCORD_CLIENT_ID', 'string', 'Your Discord client ID. Required.'],
    ['DISCORD_CLIENT_SECRET', 'string', 'Your Discord client secret. Required.'],
    ['DISCORD_CALLBACK_URL', 'string', 'The callback URL for Discord authentication. Defaults to `/oauth/discord/callback`.'],
  ]}
/>

#### [Facebook Authentication](/docs/configuration/authentication/OAuth2-OIDC/facebook)

For more information: **[Facebook Authentication](/docs/configuration/authentication/OAuth2-OIDC/facebook)**

<OptionTable
  options={[
    ['FACEBOOK_CLIENT_ID', 'string', 'Your Facebook client ID. Required.'],
    ['FACEBOOK_CLIENT_SECRET', 'string', 'Your Facebook client secret. Required.'],
    ['FACEBOOK_CALLBACK_URL', 'string', 'The callback URL for Facebook authentication. Defaults to `/oauth/facebook/callback`.'],
  ]}
/>

#### [GitHub Authentication](/docs/configuration/authentication/OAuth2-OIDC/github)

For more information: **[GitHub Authentication](/docs/configuration/authentication/OAuth2-OIDC/github)**

<OptionTable
  options={[
    ['GITHUB_CLIENT_ID', 'string', 'Your GitHub client ID. Required.'],
    ['GITHUB_CLIENT_SECRET', 'string', 'Your GitHub client secret. Required.'],
    ['GITHUB_CALLBACK_URL', 'string', 'The callback URL for GitHub authentication. Defaults to `/oauth/github/callback`.'],
  ]}
/>

#### [Google Authentication](/docs/configuration/authentication/OAuth2-OIDC/google)

For more information: **[Google Authentication](/docs/configuration/authentication/OAuth2-OIDC/google)**

<OptionTable
  options={[
    ['GOOGLE_CLIENT_ID', 'string', 'Your Google client ID. Required.'],
    ['GOOGLE_CLIENT_SECRET', 'string', 'Your Google client secret. Required.'],
    ['GOOGLE_CALLBACK_URL', 'string', 'The callback URL for Google authentication. Defaults to `/oauth/google/callback`.'],
  ]}
/>

#### [OpenID Connect](/docs/configuration/authentication/OAuth2-OIDC#openid-connect)

For more information: 
  - [AWS Cognito](/docs/configuration/authentication/OAuth2-OIDC/aws)
  - [Azure Entra/AD](/docs/configuration/authentication/OAuth2-OIDC/azure)
  - [Keycloak](/docs/configuration/authentication/OAuth2-OIDC/keycloak)

<OptionTable
  options={[
    ['OPENID_CLIENT_ID', 'string', 'Your OpenID client ID. Required.'],
    ['OPENID_CLIENT_SECRET', 'string', 'Your OpenID client secret. Required.'],
    ['OPENID_ISSUER', 'string', 'The OpenID issuer URL. Required.'],
    ['OPENID_SESSION_SECRET', 'string', 'The secret for OpenID session storage. Required.'],
    ['OPENID_SCOPE', 'string', 'The OpenID scope. Defaults to `openid profile email`.'],
    ['OPENID_CALLBACK_URL', 'string', 'The callback URL for OpenID authentication. Defaults to `/oauth/openid/callback`.'],
    ['OPENID_BUTTON_LABEL', 'string', 'The label for the OpenID login button.'],
    ['OPENID_IMAGE_URL', 'string', 'The URL of the OpenID login button image.'],
    ['OPENID_REQUIRED_ROLE_TOKEN_KIND', 'string', 'The token kind for required role validation.'],
    ['OPENID_REQUIRED_ROLE', 'string', 'The required role for validation.'],
    ['OPENID_REQUIRED_ROLE_PARAMETER_PATH', 'string', 'The parameter path for required role validation.'],
  ]}
/>

### Email Password Reset

Email is used for password reset. See: **[Email Password Reset](/docs/configuration/authentication/password_reset)**

**Important Note**: All of the service or host, username, and password, and the From address must be set for email to work.

> **Warning**: If using `EMAIL_SERVICE`, **do NOT** set the extended connection parameters:
> HOST, PORT, ENCRYPTION, ENCRYPTION_HOSTNAME, ALLOW_SELFSIGNED. 
> Failing to set valid values here will result in LibreChat using the unsecured password reset!

See: **[nodemailer well-known-services](https://community.nodemailer.com/2-0-0-beta/setup-smtp/well-known-services/)**

```
_code_box_
```
<OptionTable
  options={[
    ['EMAIL_SERVICE', 'string', 'Email service (e.g., Gmail, Outlook). Defaults to empty string.'],
    ['EMAIL_HOST', 'string', 'Mail server host. Defaults to empty string.'],
    ['EMAIL_PORT', 'number', 'Mail server port. Defaults to 25.'],
    ['EMAIL_ENCRYPTION', 'string', 'Encryption method (starttls, tls, etc.). Defaults to empty string.'],
    ['EMAIL_ENCRYPTION_HOSTNAME', 'string', 'Hostname for encryption. Defaults to empty string.'],
    ['EMAIL_ALLOW_SELFSIGNED', 'boolean', 'Allow self-signed certificates. Defaults to false.'],
    ['EMAIL_USERNAME', 'string', 'Username for authentication. Defaults to empty string.'],
    ['EMAIL_PASSWORD', 'string', 'Password for authentication. Defaults to empty string.'],
    ['EMAIL_FROM_NAME', 'string', 'From name. Defaults to APP_TITLE.'],
    ['EMAIL_FROM', 'string', 'From email address. Required. Defaults to noreply@librechat.ai'],
  ]}
/>

Here is the rewritten documentation in MDX format with improvements:

### UI

#### Help and FAQ Button

<OptionTable
  options={[
    ['HELP_AND_FAQ_URL', 'string', 'Help and FAQ URL. If empty or commented, the button is enabled. Defaults to empty string.'],
  ]}
/>

**Behaviour:**

* If `HELP_AND_FAQ_URL` is empty or commented, the button is enabled.
* If `HELP_AND_FAQ_URL` is set to a URL (e.g., `https://example.com`), the button is enabled and links to that URL.
* If `HELP_AND_FAQ_URL` is set to `/`, the button is disabled.

#### App Title and Footer

<OptionTable
  options={[
    ['APP_TITLE', 'string', 'App title. Defaults to "LibreChat".'],
    ['CUSTOM_FOOTER', 'string', 'Custom footer. Leave empty to remove the footer.'],
  ]}
/>

**Behaviour:**

* Uncomment `CUSTOM_FOOTER` to add a custom footer.
* Uncomment and leave `CUSTOM_FOOTER` empty to remove the footer.

#### Birthday Hat

<OptionTable
  options={[
    ['SHOW_BIRTHDAY_ICON', 'boolean', 'Show the birthday hat icon. Defaults to true.'],
  ]}
/>

**Behaviour:**

* The birthday hat icon will show automatically on February 11th (LibreChat's birthday).
* Set `SHOW_BIRTHDAY_ICON` to `false` to disable the birthday hat.
* Set `SHOW_BIRTHDAY_ICON` to `true` to enable the birthday hat all the time.

### Other

#### Redis

**Note:** Redis support is experimental, and you may encounter some problems when using it.

**Important:** If using Redis, you should flush the cache after changing any LibreChat settings.

<OptionTable
  options={[
    ['REDIS_URI', 'string', 'Redis URI. Defaults to empty string.'],
    ['USE_REDIS', 'boolean', 'Use Redis. Defaults to false.'],
  ]}
/>

TODO:fix URLs, fix title